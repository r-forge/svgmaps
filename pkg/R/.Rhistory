Design <- "WL"
if(Design %in% c("QPR", "HWO")){S <- "Pflegestufe"}
if(!Design %in% c("QPR", "HWO")){ S <- Design}
if(Design %in% c("SEG.2.1", "SEG.2.2", "SEG.2F")) S <- "SEG.2"
thisEinrichtungenL <- lapply(einrichtungenL, FUN=function(X){X[!is.na(X[, S]),]})
thisEinrichtungenL <- thisEinrichtungenL[sapply(thisEinrichtungenL, nrow)!=0]
skwL <- lapply(thisEinrichtungenL, FUN=skalenwerte,
Schichtung=S,
einrichtungen=einrichtungen,
kriterien=GesamtPlus)
QB1L <- lapply(skwL, function(X, ...) colMeans(X[QB1, ], ...), na.rm=TRUE)
QB2L <- lapply(skwL, function(X, ...) colMeans(X[QB2, ], ...), na.rm=TRUE)
GPL <- lapply(skwL, function(X, ...) colMeans(X[GesamtPlus, ], ...), na.rm=TRUE)
tmp <- popMeansE(QB1L)
tmp
names(einrichtungenL)
tmp <- bereichsL
namesE <- vector()
for(i in 1:length(names(tmp))){
heimName <- names(tmp)[i]
namesE[i] <- substring(heimName, nchar(heimName)-4, nchar(heimName))
}
namesE
names(tmp) <- namesE
tmp
ge <- as.data.frame(lapply(tmp, '[', "mean"))
gp <- as.data.frame(lapply(tmp, '[', "smean"))
gv <- as.data.frame(lapply(tmp, '[', "wmean"))
gpop <- rbind(ge, gp, gv)
order <- order(names(tmp))
rownames(gpop) <- c("Einfach", "Proportional", "Vergleichbar")
names(E)
namesE
rownames(gpop) <- c("Einfach", "Proportional", "Vergleichbar")
gpop[, order]
nmissDat <- data.frame(kriterien=NA, missed=NA, design=NA, einrichtung=NA)
QB1out <- data.frame(X034D7=NA,   X655F1=NA,   X655F5=NA,   X65632=NA,    BB227=NA,  BB228=NA,    C0C4B=NA,
Design=NA, Gewichtung=NA)
QB2out <- data.frame(X034D7=NA,   X655F1=NA,   X655F5=NA,   X65632=NA,    BB227=NA,  BB228=NA,    C0C4B=NA,
Design=NA, Gewichtung=NA)
GPout <- data.frame(X034D7=NA,   X655F1=NA,   X655F5=NA,   X65632=NA,    BB227=NA,  BB228=NA,    C0C4B=NA,
Design=NA, Gewichtung=NA)
source('Y:/_PROJEKTE_/MDK_in_Bayern/Dezember2011/prog/sampleAmbulant.r')
setwd("../results/")
save(boxData, file=paste("boxData_2011-12-07.rda"))
save(ergArray, file="ergArray_2011-12-07.rda")
save(nmissDat, file="nmissDat_2011-12-07.rda")
save(QB1out, QB2out, GPout, file="MDKout_2012-11-07.rda")
setwd("../prog/")
library("roxygen")
setwd("~/Dropbox/svgmaps/")
roxygenize("pkg")
roxygenize("pkg")
setwd("../..")
getwd()
roxygenize("pkg")
library(ggplot2)
ggplot2
ggplot
structure
?structure
library(proto)
?structure
ggname
library(gridSVG)
install.packages("gridSVG")
install.packages("svgGrid")
library(gridSVG)
library(grid)
?grid.get
?pointsGrob
pointsGrob(1,1)
?grid.get
ggplot2:::remove_missing
geom_point2 <- function (...) GeomPoint2$new(...)
GeomPoint2 <- proto(ggplot2:::GeomPoint, {
objname <- "point2"
draw <- function(., data, scales, coordinates, na.rm = FALSE, ...)
{
data <- remove_missing(data, na.rm,  c("x", "y", "size", "shape"), name = "geom_point")
if (empty(data)) return(zeroGrob())
browser()
with(coord_transform(coordinates, data, scales),
ggname(.$my_name(), pointsGrob(x, y, size = unit(size, "mm"),
pch = shape,
gp = gpar(col = alpha(colour,
alpha), fill = fill, fontsize = size * .pt, meta = meta))
)
)
}
})
p <- ggplot(test) + geom_point2(aes(x=x, y=y, group=group, meta=group))
test <- data.frame(x=c(1,9,9,2,3,2,3,9,9,8), y=10:1, group=rep(c(2,1), times=5))
p <- ggplot(test) + geom_point2(aes(x=x, y=y, group=group, meta=group))
p
ls()
data
head(data)
str(gs)
test <- garnishGrob(gs, meta= meta, onmouseover=rep("showTooltip(evt)", times=150), group = FALSE)
test <- garnishGrob(gs, meta= meta, onmouseover=rep("showTooltip(evt)", times=150), group = FALSE)
test <- garnishGrob(gs, meta= gs$meta, onmouseover=rep("showTooltip(evt)", times=150), group = FALSE)
str(test)
Q
Q
]
ls()
str(test)
ls()
garnishGrob()
head(data)
garnishGrob(test, meta = data$fill, groups = FALSE)
str(garnishGrob(test, meta = data$fill, groups = FALSE))
str(garnishGrob(test, meta = data$fill, groups = FALSE)$groupAttributes)
str(garnishGrob(test, meta = data$fill, groups = FALSE)$groupAttributes$meta)
data
Q
summary(test)
ls()
data
n
ls()
data
ls()
data
n
ls()
data
n
ls()
data
q()
Q
ls()
gs
str(gs)
str(gs2)
dta
data
Q
traceback()
ls()
data
ls()
str(gs2)
Q
Q
getwd()
df
library(ggplot2)
